<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="800" MinHeight="450" MinWidth="660" >
    <Window.Resources>
        <Style x:Key="ButtonPlus" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="10 0 10 0"/>
            <Setter Property="Command" Value="{Binding ChangeViewCommand}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Black"/>
            <Setter Property="Content" Value="+"/>

            <!--     -->
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="MinHeight"
          Value="23" />
            <Setter Property="MinWidth"
          Value="75" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">

                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--     -->
        </Style>
        <Style  TargetType="TextBlock">
            <Setter Property="Padding" Value="10"/>
            <!--<Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#FFFBF57E" Offset="0"/>
                        <GradientStop Color="#FFBBC319" Offset="1"/>
                        <GradientStop Color="#FFB6A70F" Offset="0.494"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="Black" Offset="0.004"/>
                        <GradientStop Color="Black" Offset="1"/>
                        <GradientStop Color="Black" Offset="0.51"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>-->
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontStyle" Value="Italic"/>

            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.SizeChanged">
            <BeginStoryboard>
                <Storyboard>
                    <ThicknessAnimation
                                To="0,0,0,0"
                                Duration="0:0:0.0"
                                Storyboard.TargetProperty="Margin" 
                                Storyboard.TargetName="ExitPanel"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>

        <EventTrigger RoutedEvent="Page.Loaded">
            <BeginStoryboard Name="backgroundAnimationsBeginStoryboard">
                <Storyboard >
                    <ColorAnimation 
            Storyboard.TargetName="mainPanel"
            Storyboard.TargetProperty="(DockPanel.Background).(DrawingBrush.Drawing).(DrawingGroup.Children)[0].(GeometryDrawing.Brush).(SolidColorBrush.Color)"
            From="LightGray" To="DarkGray" Duration="0:0:50" RepeatBehavior="Forever" 
            AutoReverse="True"/>
                    <DoubleAnimation 
            Storyboard.TargetName="mainPanel"
            Storyboard.TargetProperty="(DockPanel.Background).(DrawingBrush.Transform).(RotateTransform.Angle)"
            From="0" To="360" Duration="0:5:00" RepeatBehavior="Forever" 
            AutoReverse="True"/>
                    <DoubleAnimation 
            Storyboard.TargetName="mainPanel"
            Storyboard.TargetProperty="(DockPanel.Background).(DrawingBrush.Drawing).(DrawingGroup.Children)[1].(GeometryDrawing.Geometry).(EllipseGeometry.RadiusX)"
            From="0.1" To="0.25" Duration="0:0:5" RepeatBehavior="Forever" 
            AutoReverse="True"/>
                    <PointAnimation 
            Storyboard.TargetName="mainPanel"
            Storyboard.TargetProperty="(DockPanel.Background).(DrawingBrush.Drawing).(DrawingGroup.Children)[2].(GeometryDrawing.Geometry).(EllipseGeometry.Center)"
            From="-0.25, -0.25" To="1.25,1.25" Duration="0:0:10" RepeatBehavior="Forever" 
            AutoReverse="True"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Grid Name="mainPanel">
        <Grid.Background>
            <DrawingBrush TileMode="Tile"
        Viewport="0,0,100,100" ViewportUnits="Absolute">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <DrawingGroup.Children>

                            <GeometryDrawing>
                                <GeometryDrawing.Geometry>
                                    <RectangleGeometry Rect="0,0,1,1" />
                                </GeometryDrawing.Geometry>
                                <GeometryDrawing.Brush>
                                    <SolidColorBrush Color="LightGray" />
                                </GeometryDrawing.Brush>
                                <GeometryDrawing.Pen>
                                    <Pen Thickness="0.01" Brush="DarkGray" />
                                </GeometryDrawing.Pen>
                            </GeometryDrawing>

                            <GeometryDrawing Brush="#99CCCCCC">
                                <GeometryDrawing.Geometry>
                                    <EllipseGeometry Center="0.75,0.5" RadiusX="0.25" RadiusY="0.25" />
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                            <GeometryDrawing Brush="#66CCCCCC">
                                <GeometryDrawing.Geometry>
                                    <EllipseGeometry Center="0.25,0.25" RadiusX="0.1" RadiusY="0.1" />
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup.Children>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
                <DrawingBrush.Transform>
                    <RotateTransform CenterX="0.5" CenterY="0.5" />
                </DrawingBrush.Transform>
            </DrawingBrush>
        </Grid.Background>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition/>
            <!-- колонка используется для выесжающего меню -->
            <ColumnDefinition Width="0"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Margin="10" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" ToolTip="Глубина резания"> t =</TextBlock>
            <TextBlock Grid.Row="1" ToolTip="Подача"> S =</TextBlock>
            <TextBlock Grid.Row="2" ToolTip="Длина обрабатываемой поверхности"> L =</TextBlock>
            <TextBlock Grid.Row="3" ToolTip="Диаметр заготовки"> D =</TextBlock>

            <DockPanel Grid.Row="4">
                <TextBlock ToolTip="Выбор Материала">Материал</TextBlock>
                <Button ToolTip="Добавление Материала" CommandParameter="Matirial" Style="{StaticResource ButtonPlus}" DockPanel.Dock="Right"/>
            </DockPanel>
            <DockPanel Grid.Row="5">
                <TextBlock ToolTip="Выбор Инструмента">Инструмент</TextBlock>
                <Button  ToolTip="Добавление Инструмента" CommandParameter="Tool" Style="{StaticResource ButtonPlus}"  DockPanel.Dock="Right" />
            </DockPanel>
            <DockPanel Grid.Row="6">
                <TextBlock ToolTip="Выбор Вида обработки">Вид обаботки</TextBlock>
                <Button ToolTip="Добавление Вида обработки" CommandParameter="Handling" Style="{StaticResource ButtonPlus}"  DockPanel.Dock="Right" />
            </DockPanel>
            <!--            Columns 1                -->



            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=T_DepthOfCut,Mode=TwoWay}"/>
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=S_Innings,Mode=TwoWay}"></TextBox>
            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Path=L_LengthOfTheSurfaceToBeTreated,Mode=TwoWay}"></TextBox>
            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Path=D_BilletDiameter,Mode=TwoWay}"></TextBox>
            <ComboBox Grid.Column="1" Grid.Row="4" ItemsSource="{Binding Path=Materials,Mode=OneWay}"   SelectedItem="{Binding MySelectedItemMaterial}"  Background="Red"    ToolTip="Выбор Материала"/>
            <ComboBox Grid.Column="1" Grid.Row="5" ItemsSource="{Binding Path=Tools,Mode=OneWay}"       SelectedItem="{Binding MySelectedItemTool}"         ToolTip="Выбор Инструмента"/>
            <ComboBox Grid.Column="1" Grid.Row="6" ItemsSource="{Binding Path=Handlings,Mode=OneWay}"   SelectedItem="{Binding MySelectedItemHandling}"     ToolTip="Выбор Вида обработки" />

        </Grid>

        <!--TODO убрать margin -->
        <Grid Background="Gray" x:Name="ExitPanel" Grid.Row="0" 
              Margin="-200,0,0,0"
              Panel.ZIndex="10000" Grid.Column="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <ToggleButton Grid.Column="0" Margin="-30,0,0,0" Padding="0,0,0,0" HorizontalContentAlignment="Stretch"  >
                <TextBlock FontSize="18" Padding="0,0,0,0" HorizontalAlignment="Center">                    
                    Фактическая <Run FontWeight="Bold" Foreground="Red" FontSize="20"> n </Run>
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="-90"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
                <ToggleButton.Triggers>
                    <EventTrigger RoutedEvent="ToggleButton.Checked">
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation               
                                To="{Binding PanelOutlet}"
                                Duration="0:0:0.3"
                                Storyboard.TargetProperty="Margin"
                                    Storyboard.TargetName="ExitPanel"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation
                                To="0,0,0,0"
                                Duration="0:0:0.3"
                                Storyboard.TargetProperty="Margin" 
                                     Storyboard.TargetName="ExitPanel"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ToggleButton.Triggers>
            </ToggleButton>

            <Grid Background="Aqua" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBox Text="{Binding Path=SpindleSpeedReal}"></TextBox>
                <Button Grid.Row="1" Command="{Binding AddNewValueSpindleSpeed}" >
                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" TextAlignment="Center" >
                    Установить фактическую скорость вращения шпинделя
                    </TextBlock>
                </Button>
            </Grid>
        </Grid>

        <Border Grid.Column="1" Grid.Row="1" Cursor="Pen">
            <StackPanel ToolTip="Ответ" Grid.Column="1" Grid.Row="1" Margin="10" Background="Bisque">
                <TextBlock Padding="10" Text="{Binding Path=CuttingSpeed,Mode=OneWay, UpdateSourceTrigger= PropertyChanged  }" />
                <TextBlock Padding="10" Text="{Binding Path=SpindleSpeed,Mode=OneWay}"/>
                <TextBlock Padding="10" Text="{Binding Path=ComputerTime,Mode=OneWay}"/>
                <TextBlock Padding="10" Text="{Binding Path= CuttingForce,Mode=OneWay}"/>
                <TextBlock Padding="10" Text="{Binding Path= Power,Mode=OneWay}"/>
            </StackPanel>
        </Border>

    </Grid>
</Window>
